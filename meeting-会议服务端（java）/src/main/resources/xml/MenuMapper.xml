<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jie.mapper.MenuMapper">
    <!-- 通用查询映射结果 -->

    <resultMap id="BaseResultMap" type="com.jie.entity.Menu">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="path" column="path" jdbcType="VARCHAR"/>
        <result property="component" column="component" jdbcType="VARCHAR"/>
        <result property="icon" column="icon" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="requireAuth" column="require_auth" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="orderNum" column="order_num" jdbcType="TINYINT"/>
        <result property="parentId" column="parent_id" jdbcType="INTEGER"/>
        <result property="isHidden" column="is_hidden" jdbcType="TINYINT"/>
    </resultMap>
    <resultMap id="Menus" type="com.jie.entity.Menu" extends="BaseResultMap">
        <collection property="children" ofType="com.jie.entity.Menu">
            <id column="id2" property="id" />
            <result column="path2" property="path" />
            <result column="component2" property="component" />
            <result column="name2" property="name" />
            <result column="icon2" property="icon" />
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result column="requireAuth2" property="requireAuth" />
            <result property="orderNum" column="order_num" jdbcType="TINYINT"/>
            <result column="parentId2" property="parentId" />
            <result column="isHidden2" property="isHidden" />
        </collection>
    </resultMap>
    <resultMap id="MenusWithRole" type="com.jie.entity.Menu" extends="BaseResultMap">
        <collection property="roles" ofType="com.jie.entity.Role">
            <id column="id" property="id" />
            <result column="rname" property="roleLabel"></result>
            <result column="label" property="roleLabel"></result>
            <result column="rname" property="roleName"></result>
        </collection>
    </resultMap>
    <!--根据用户id查询菜单列表-->
    <select id="getMenusByAdminId" resultMap="Menus"  parameterType="int">
        SELECT
            DISTINCT
            m1.*,
            m2.`id` AS id2,
            m2.`path` AS path2,
            m2.`component` AS component2,
            m2.`name` AS name2,
            m2.`icon` AS icon2,
            m2.`require_auth` AS requireAuth2,
            m2.`parent_id` AS parentId2,
            m2.`is_hidden` AS isHidden2
        FROM
            `menu` m1,
            `menu` m2,
            `user_role` ar,
            `role_menu` mr
        WHERE
            m1.`id` = m2.`parent_id`
          AND m2.`id` = mr.`menu_id`
          AND mr.`role_id` = ar.`role_id`
          AND ar.`user_id` = #{adminId}
          AND m2.`is_hidden` = 0
        order by order_num
    </select>
    <!-- 根据角色获取菜单列表   -->
    <select id="getMenusWithRole" resultMap="MenusWithRole">
        SELECT
            m.*,
            r.`id` AS rid,
            r.`role_label` AS label,
            r.role_name AS rname
        FROM
            `menu` m
                INNER JOIN `role_menu` mr ON m.`id` = mr.`menu_id`
                INNER JOIN `role` r ON r.id = mr.`role_id`
        ORDER BY
            m.`id`
    </select>
    <select id="listMenusByUserInfoId" resultType="com.jie.entity.Menu">
        SELECT DISTINCT
            m.id,
            `name`,
            `path`,
            component,
            icon,
            is_hidden,
            parent_id,
            order_num
        FROM
            user_role ur
                JOIN role_menu rm ON ur.role_id = rm.role_id
                JOIN `menu` m ON rm.menu_id = m.id
        WHERE
            user_id = #{userInfoId}
    </select>
</mapper>
